name: Release Please

on:
  push:
    branches:
      - main

# Required permissions for release-please to create PRs and releases
permissions:
  contents: write          # Create releases and tags
  pull-requests: write     # Create and update pull requests
  issues: write            # Create and manage labels
  repository-projects: read # Read repository projects (required for v4)

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - name: Clean up stale release labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üßπ Cleaning up merged PRs with stale autorelease: pending labels"
          # Remove autorelease: pending labels from merged PRs to prevent deadlock
          pr_numbers=$(gh pr list --repo "${{ github.repository }}" --state merged --label "autorelease: pending" --json number | jq -r '.[] | .number')
          
          if [ -n "$pr_numbers" ]; then
            for pr in $pr_numbers; do
              echo "Removing stale label from merged PR #$pr"
              if gh pr edit "$pr" --remove-label "autorelease: pending" 2>/dev/null; then
                echo "‚úÖ Successfully removed label from PR #$pr"
              else
                echo "‚ùå Failed to remove label from PR #$pr (may already be removed)"
              fi
            done
          else
            echo "‚ú® No merged PRs with stale autorelease: pending labels found"
          fi

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  # Additional actions to run when a release is created
  post-release:
    needs: [release-please]
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Post-release actions
        env:
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
          VERSION: ${{ needs.release-please.outputs.version }}
        run: |
          echo "üéâ Release $TAG_NAME was created successfully!"
          echo "Version: $VERSION"
          echo "You can add additional post-release actions here, such as:"
          echo "- Building and uploading assets"
          echo "- Sending notifications"
          echo "- Updating documentation"
